services:
  database:
    build: ./database
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./database/.env

  train-deploy:
    build: ./train-deploy
    volumes:
      - ./train-deploy:/app
      - mlops-data:/shared/data
      - mlops-models:/shared/models
    command: ["tail", "-f", "/dev/null"]
    depends_on:
      - experiment-tracking

  experiment-tracking:
    build: ./experiment-tracking
    ports:
      - 5000:5000
    env_file:
      - ./database/.env
    depends_on:
      - database
    volumes:
      - mlflow-artifacts:/mlflow/mlruns

  orchestration:
    build:
      context: .
      dockerfile: orchestration/Dockerfile
    ports:
      - 4200:4200
    volumes:
      - ./orchestration:/app
      - ./train-deploy:/train-deploy
      - mlops-data:/shared/data
      - mlops-models:/shared/models
      - mlflow-artifacts:/mlflow/mlruns
    depends_on:
      - experiment-tracking

  web-api:
    build:
      context: .
      dockerfile: web-api/Dockerfile
    ports:
      - "9696:9696"
    volumes:
      - mlflow-artifacts:/mlflow/mlruns
      - mlops-data:/shared/data
      - mlops-models:/shared/models
    depends_on:
      - experiment-tracking
      - database

  test-api:
    image: python:3.11-slim
    volumes:
      - ./tests:/tests
    depends_on:
      - web-api
    working_dir: /tests
    command: |
      bash -c "
        pip install requests &&
        echo 'ðŸš€ Testing API...' &&
        python test_api.py
      "
    profiles: ["test"] # Prevents auto start

  batch-service:
    build: ./deploy-batch
    volumes:
      - batch-data:/batch-data
      - mlflow-artifacts:/mlflow/mlruns
      - mlops-data:/shared/data
      - mlops-models:/shared/models
    depends_on:
      - orchestration
    profiles: ["batch"]

  monitoring:
    build: ./monitoring
    volumes:
      - batch-data:/data # Mount batch-data to /data in container
      - ./monitoring/reports:/reports
    depends_on:
      - orchestration
    profiles: ["monitoring"]

volumes:
  postgres-data:
  mlops-data:
  mlops-models:
  mlflow-artifacts:
  batch-data:
